// Triangular, pentagonal, and hexagonal Problem 45 Triangle,
//   pentagonal, and hexagonal numbers are generated by the following
//   formulae:

//   Triangle: Tn=n(n+1)/2 1, 3, 6, 10, 15, ...
//   Pentagonal: Pn=n(3n−1)/2 1, 5, 12, 22, 35, ...
//   Hexagonal Hn=n(2n−1) 1, 6, 15, 28, 45, ...
//   It can be verified that T285 = P165 = H143 = 40755.

//   Find the next triangle number that is also pentagonal and
//   hexagonal.Triangular, pentagonal, and hexagonal

#include <cmath>
#include <iostream>

const int INITIAL_HEX_NUM = 144;

inline bool IsPentagonalNum(long n){
  long sqrt_args = 1 + 24*n;
  // Check to make sure our sqrt is an integer.
  long isqrt = (long)std::sqrt(sqrt_args);
  if (sqrt_args != isqrt*isqrt) {
    return false;
  }
  return !((isqrt + 1) % 6);
}

void Solution() {
  long i = INITIAL_HEX_NUM;
  long h_i = 0;
  while (h_i >= 0) {
    h_i = i*(2*i-1);
    if (IsPentagonalNum(h_i)) {
      std::cout << "i: " << i << "h_i = " << h_i << std::endl;
      return;
    }
    ++i;
  }
  return;
}

int main() {
  Solution();
  return 0;
}
